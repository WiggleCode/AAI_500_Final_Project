""DRAFT"" Currently works but would like to add more features

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier # or KNeighborsRegressor for regression
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix



# K-Nearest Neighbors (Euclidean)

# Load training data
train_df = pd.read_csv('train.csv')

# Encode churn column as binary
train_df["churn_encoded"] = train_df["churn"].map({"no": 0, "yes": 1})

# Features (predictors)
X = train_df[['total_day_minutes', 'total_eve_minutes', 'total_night_minutes',
              'total_intl_minutes', 'total_day_calls', 'total_eve_calls',
              'total_night_calls', 'number_customer_service_calls']]

# Target of what we are trying to predict 
y = train_df['churn_encoded']  # Targetting the 1:0 yes:no frame

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the KNN model
knn_model = KNeighborsClassifier(n_neighbors=5) # Choose an appropriate 'k' value
knn_model.fit(X_train, y_train)

# Make predictions
y_pred = knn_model.predict(X_test)

# Evaluate the model
print(f"Accuracy: {accuracy_score(y_test, y_pred)}")
print(confusion_matrix(y_test, y_pred))
print(classification_report(y_test, y_pred))
